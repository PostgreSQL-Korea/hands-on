# su - postgres
$ pg_ctl start
$ pgbench -i test
$ pgbench -c 10 -j 10 -T 600 test &
$ ps x
$ psql test
test=# select * from pg_stat_activity limit 1 \gx
test=# select pid, age(now(),query_start),state,wait_event_type,wait_event 
from pg_stat_activity where query_start is not null order by 2 desc;
test=# \watch 1
test=# select pid,unnest(pg_blocking_pids(pid)) as locker,wait_event,state, age(now(),state_change) 
from pg_stat_activity where wait_event_type = 'Lock' order by 5 desc;
test=# select datname,age(datfrozenxid) from pg_database;
test=# show vacuum_freeze_
test=# show autovacuum_freeze_
test=# select a.oid::regclass, age(a.relfrozenxid), last_vacuum,last_autovacuum,last_analyze,last_autoanalyze 
from pg_class a left join pg_stat_all_tables b on a.oid = b.relid where relkind in ('r','t','m') order by 2;
test=# \copy (select 'analyze ' || a.oid::regclass || ';' from pg_class a left join pg_stat_all_tables b on a.oid = b.relid 
where relkind in ('r','m') and b.last_analyze is null and b.last_autoanalyze is null) to '/tmp/zqzq'
test=# \i /tmp/zqzq
test=# SELECT a.oid::regclass,
       age(a.relfrozenxid),
       a.relpages * 8192 AS relsize,
       ceil((b.n_live_tup * c.stawidth) * 1.0 / 8192) * 8192 AS actualsize,
       int4((a.relpages * 8192) / (ceil((b.n_live_tup * c.stawidth) * 1.0 / 8192) * 8192)) AS ratio_bloat,
       last_vacuum,
       last_autovacuum
FROM pg_class a
LEFT JOIN pg_stat_all_tables b ON a.oid = b.relid
LEFT JOIN
  (SELECT starelid,
          sum(stawidth) AS stawidth
   FROM pg_statistic
   GROUP BY starelid) c ON a.oid = c.starelid
WHERE relkind IN ('r',
                  'm')
  AND a.relname <> 'pg_statistic'
  AND relpages > 0
  AND int4((a.relpages * 8192) / (ceil((b.n_live_tup * c.stawidth) * 1.0 / 8192) * 8192)) > 1
ORDER BY 2;
test=# 
